{
  "hash": "297db7153a627d30d10ce0412a38f777",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Text Analysis\"\n---\n\n\n\n\nThis is a Quarto website.\n\nTo learn more about Quarto websites visit <https://quarto.org/docs/websites>.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"Hello, world!\"\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Hello, world!\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidytext\")\nlibrary(\"tidyverse\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nâ”€â”€ Attaching core tidyverse packages â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 2.0.0 â”€â”€\nâœ” dplyr     1.1.4     âœ” readr     2.1.5\nâœ” forcats   1.0.0     âœ” stringr   1.5.1\nâœ” ggplot2   3.5.2     âœ” tibble    3.3.0\nâœ” lubridate 1.9.4     âœ” tidyr     1.3.1\nâœ” purrr     1.1.0     \nâ”€â”€ Conflicts â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€\nâœ– dplyr::filter() masks stats::filter()\nâœ– dplyr::lag()    masks stats::lag()\nâ„¹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(\"dplyr\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read csv file\ndata <- read.csv(\"data/raw/comments.csv\")\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       id\n1 s1_0001\n2 s1_0002\n3 s1_0003\n4 s1_0004\n5 s1_0005\n6 s1_0006\n                                                                                                                                                                                                                                       text\n1                                                                                                                                                       everyone telling me to watch severance but no nobody tryna watch me not have apple+\n2                                                                                                                                                                    I can't quite explain it but the show Severance is captivating so far.\n3 Was in a full body clench the entire second half of that #Severance season finale ðŸ˜¬\\n \\n One of the most exhilarating TV experiences I've had in a long time\\n \\n Just a perfect conclusion to what was already a stand-out first season\n4                                                                                                                                                                                           One of the greatest movie series Iâ€™ve ever seen\n5                                                                                                                                                        Severance on Apple TV+ delivered the best season finale Iâ€™ve seen in years. ðŸ”¥ðŸ”¥ðŸ”¥\n6                                                                                                                                                                                                          Severance on Apple+ is too fire.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Describe data\nsummary(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      id                text          \n Length:5877        Length:5877       \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# count number of elements that start with s1\nsum(grepl(\"^s1\", data$id))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1786\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(grepl(\"^s2\", data$id))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4091\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# evaluate which season has more words in comments\ns1_comments <- data %>%\n    mutate(word_count = str_count(text, \"\\\\w+\")) %>%\n    filter(grepl(\"^s1\", id)) %>%\n    summarise(total_words = sum(word_count))\n\ns1_comments\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  total_words\n1       39614\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ns2_comments <- data %>%\n    mutate(word_count = str_count(text, \"\\\\w+\")) %>%\n    filter(grepl(\"^s2\", id)) %>%\n    summarise(total_words = sum(word_count))\n\ns2_comments\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  total_words\n1       97945\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#non-alphanumeric count\n# Season 1 non-alphanumeric count\ns1_nac <- data %>%\n    mutate(\n        non_alphanumeric_count = str_count(text, \"[\\\\w\\\\s]\")\n    ) %>%\n    filter(grepl(\"^s1\", id)) %>%\n    summarise(total_non_alphanumeric = sum(non_alphanumeric_count))\n\ns1_nac\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  total_non_alphanumeric\n1                 213377\n```\n\n\n:::\n\n```{.r .cell-code}\n# Season 2 non-alphanumeric count\ns2_nac <- data %>%\n    mutate(\n        non_alphanumeric_count = str_count(text, \"[\\\\w\\\\s]\")\n    ) %>%\n    filter(grepl(\"^s2\", id)) %>%\n    summarise(total_non_alphanumeric = sum(non_alphanumeric_count))\n\ns1_nac\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  total_non_alphanumeric\n1                 213377\n```\n\n\n:::\n\n```{.r .cell-code}\ns2_nac\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  total_non_alphanumeric\n1                 532345\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}